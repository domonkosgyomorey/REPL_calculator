Tokens [NUMBER(1, 0), PLUS(1), NUMBER(1, 2)]
Infixed syntax [NUMBER(1, 0), NUMBER(1, 2), PLUS(1)]
Expression tree Ok(Operator { op: PLUS(1), left: Number(1), right: Number(1) })
2

Tokens [LPAREN(0), RPAREN(1)]
Infixed syntax []
Expression tree Err((4, None))
Tokens [LPAREN(0), LPAREN(1), RPAREN(2), RPAREN(3)]
Infixed syntax []
Expression tree Err((4, None))
Tokens [LPAREN(0), LPAREN(1), RPAREN(2), RPAREN(3), PLUS(4), NUMBER(1, 5)]
Infixed syntax [NUMBER(1, 5), PLUS(4)]
Expression tree Err((9, Some(4)))
Tokens [MINUS(0)]
Infixed syntax [MINUS(0)]
Expression tree Err((9, Some(0)))
